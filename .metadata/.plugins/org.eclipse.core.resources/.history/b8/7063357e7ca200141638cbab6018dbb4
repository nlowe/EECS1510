package eecs1510.exercise;

import java.util.Scanner;

/**
 * 
 *
 * @author Nathan Lowe
 * Created on Jan 22, 2015
 * 
 * Calculates the area of a triangle given three points
 *
 */
public class TriangleProperties
{

	public static void main(String[] args)
	{
		Scanner s = new Scanner(System.in);
		
		System.out.print("Enter the First Point of the Triangle: ");
		String p1str = s.nextLine();
		double[] p1 = stringToPoint(p1str.trim());
		
		System.out.print("Enter the Second Point of the Triangle: ");
		String p2str = s.nextLine(); 
		double[] p2 = stringToPoint(p2str.trim());
		
		System.out.print("Enter the Third Point of the Triangle: ");
		String p3str = s.nextLine();
		double[] p3 = stringToPoint(p3str.trim());
		
		double[] sides = new double[]{dist(p1[0], p1[1], p2[0], p2[1]), dist(p2[0], p2[1], p3[0], p3[1]), dist(p1[0], p1[1], p3[0], p3[1])};
		double[] angles = triangleAngles(sides[0], sides[1], sides[2]);
		double area = triangleArea(sides[0], sides[1], sides[2]);
		double parimeter = sides[0] + sides[1] + sides[2];
		
		System.out.printf("The the triangle formed by the points (%.2f,%.2f),(%.2f,%.2f),(%.2f,%.2f) has\n"
				+ "\tSide lengths of: %.2f, %.2f, and %.2f\n"
				+ "\tAngle Measurements of: %.2f, %.2f, and %.2f\n"
				+ "\tan Area of: %.2f\n"
				+ "\ta Perimeter of %.2f", p1[0], p1[1], p2[0], p2[1], p3[0], p3[1], sides[0], sides[1], sides[2], angles[0], angles[1], angles[2], area, parimeter);
		
		s.close();
	}
	
	/**
	 * Converts a string to a point representation
	 * 
	 * (x,y)  --> new double[]{x, y}
	 * x,y    --> new double[]{x, y}
	 * 
	 * @param str
	 * @return
	 */
	public static double[] stringToPoint(String str)
	{
		if(str.startsWith("(")) str = str.substring(1);
		if(str.endsWith(")")) str.substring(0, str.length() - 2);
		
		String[] components = str.split(",");
		if(components.length > 2){
			throw new IllegalArgumentException("Invalid input: " + str);
		}
		
		return new double[]{Double.parseDouble(components[0]), Double.parseDouble(components[1])};
		
	}
	
	/**
	 * Calculates the distance between two points
	 * 
	 * @param x1
	 * @param y1
	 * @param x2
	 * @param y2
	 * @return
	 */
	public static double dist(double x1, double y1, double x2, double y2)
	{
		return Math.sqrt(Math.pow(y2 - y1, 2) + Math.pow(x2 - x1, 2));
	}
	
	/**
	 * Calculates the angles of a triangle given the length of its side
	 * 
	 * @param side1
	 * @param side2
	 * @param side3
	 * @return
	 */
	public static double[] triangleAngles(double side1, double side2, double side3)
	{
		return new double[]{Math.toDegrees(Math.atan2(side1, side2)), Math.toDegrees(Math.atan2(side2, side3)), Math.toDegrees(Math.atan2(side1, side3))};
	}
	
	/**
	 * Calculates the area of a triangle
	 * 
	 * @param side1
	 * @param side2
	 * @param side3
	 * @return
	 */
	public static double triangleArea(double side1, double side2, double side3)
	{
		double s = (side1 + side2 + side3)/2;
		return Math.sqrt(s * (s - side1) * (s - side2) * (s - side3));
	}
	
}
